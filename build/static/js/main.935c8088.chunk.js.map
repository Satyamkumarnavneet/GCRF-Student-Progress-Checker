{"version":3,"sources":["components/common/Loading.js","assets/img/headerLogo.png","components/common/Header.js","appConfig.js","components/Dashboard/MessageBox.js","components/Dashboard/StudentEmailForm.js","components/Dashboard/Milestone.js","components/Dashboard/StudentInfo.js","components/Dashboard/ProgressCard.js","components/Dashboard/Dashboard.js","components/common/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Loading","props","AnimatePresence","StyledLoadingContainer","initial","opacity","translateX","animate","exit","src","alt","styled","motion","div","Header","showLeaderboard","setShowLeaderboard","StyledHeader","HeaderLogo","className","MessageBox","message","StyledMessageDialogueBox","translateY","style","backgroundColor","isError","border","msg","StudentEmailForm","handleUserEmailFormSubmit","setUserEmail","form","onChange","e","target","value","onSubmit","type","placeholder","required","onClick","Milestone","milestoneData","milestoneTitle","hasMilestoneUnlocked","boxShadow","milestoneColor","p","transition","delay","completedText","width","milestoneProgressPercentage","stiffness","damping","milestoneCompletedQuestBadges","maxQuestBadges","marginLeft","milestoneCompletedSkillBadges","maxSkillBadges","StudentInfo","studentData","StyledStudentInfo","Date","toLocaleString","ProgressCard","userStudentDetails","completedQuestBadges","parseInt","completedSkillBadges","clamp","val","min","max","milestones","toFixed","StyledProgressCard","map","milestone","id","Dashboard","studentsData","setIsLoading","useState","userEmail","showProgressCard","setShowProgressCard","setMessage","setUserStudentDetails","StyledDash","preventDefault","data","foundStudent","find","student","footer","StyledFooter","href","App","isLoading","setStudentsData","useEffect","Papa","parse","download","header","complete","results","sort","student1","student2","Footer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.935c8088.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components'\nimport { motion, AnimatePresence} from 'framer-motion'\nfunction Loading(props) {\n    return (\n        <AnimatePresence>\n            <StyledLoadingContainer\n                initial={{opacity: 0, translateX: \"-50%\"}}\n                animate={{opacity: 1, translateX: \"-50%\"}}\n                exit={{opacity: 0, translateX: \"-50%\"}}\n            >\n                <img src=\"loading.svg\" alt=\"\"/>\n                <p>Loading....</p> \n            </StyledLoadingContainer>\n        </AnimatePresence>\n    );\n}\n\nexport default Loading;\n\nlet StyledLoadingContainer = styled(motion.div)`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%,50%);\n    background-color: white;\n    box-shadow: 0 0 20px rgba(0, 0, 0, 0.193);\n    display: flex;\n    align-items: center;\n    padding: 10px 20px;\n    border-radius: 5px;\n    img{\n        width: 35px;\n        margin-right: 10px;\n    }\n`","export default __webpack_public_path__ + \"static/media/headerLogo.9ea07d2f.png\";","import React from 'react';\nimport styled from 'styled-components';\nimport HeaderLogo from '../../assets/img/headerLogo.png'\nimport { facilitatorInstituionName, facilitatorLastUpdated } from '../../appConfig'\n\n\nfunction Header({ showLeaderboard, setShowLeaderboard }) {\n    return (\n        <StyledHeader>\n            <img src={HeaderLogo} alt=\"\" />\n            <h1>Student Dashboard</h1>\n            <div className=\"header-info-container\">\n                <p className=\"facilitator-last-updated\">Last Updated: {facilitatorLastUpdated}</p>\n                <p className=\"facilitator-institution-name\">{facilitatorInstituionName}</p>\n            </div>\n        </StyledHeader>\n    );\n}\n\nexport default Header;\n\nlet StyledHeader = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin: 20px 0 auto auto;\n    /* width: 100vw; */\n    box-sizing: border-box;\n    h1{\n        text-transform: uppercase;\n        font-size: 25px;\n        color: #EA4335;\n        text-align: center;\n    }\n    img{\n        max-width: 300px;\n    }\n    .header-info-container{\n        display: flex;\n        align-items: center;\n        background-color: white;\n        box-shadow: 0px 4px 15px -3px rgba(0, 0, 0, 0.29);\n        border-radius: 60px;\n        padding: 7px 17px;\n        .facilitator-last-updated{\n            box-shadow: 0px 4px 15px -3px rgba(0, 0, 0, 0.29);\n            border-radius: 39px;\n            background: #34A853;\n            font-size: 12px;\n            padding: 5px 10px;\n            color: white;\n            margin: 0;\n            margin-right: 10px;\n            font-weight: 600;\n            white-space:  nowrap;\n        }\n        .facilitator-institution-name{\n            font-weight: 600;\n            margin: 0;\n            padding: 0;\n            font-size: 12px;\n        }\n    }\n    .tab-menu{\n        display: flex;\n        margin: 20px;\n        p{\n            padding: 15px 20px;\n            color: black;\n            text-transform: uppercase;\n            font-size: 15px;\n            margin: 10px;\n            padding: 0;\n            font-weight: 500;\n            cursor: pointer;\n            white-space: nowrap;\n        }\n        .tab-menu-active{\n            border-bottom: 2px solid black;\n        }\n    }\n    @media only screen and (max-width: 600px) {\n        h1{\n            font-size: 18px;\n        }\n        .header-info-container{\n            flex-direction: column;\n            padding: 10px!important;\n            border-radius: 5px;\n        }\n        .facilitator-institution-name{\n            margin-top: 10px!important;\n        }\n    }\n    @media only screen and (max-width: 350px) {\n        .tab-menu{\n            p{\n                font-size: 12px;\n            }\n        }\n    }\n`","// Each time you update change to the latest\n// date of updating. Also change your facilitator\n// instituion name. Change here will affect whole application.\n\nlet facilitatorInstituionName = \"Chandigarh University\"\nlet facilitatorLastUpdated = \"13th MAY 2022\"\n\nexport { facilitatorInstituionName, facilitatorLastUpdated }","import React from 'react';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\n\nfunction MessageBox({message}) {\n    return (\n        <StyledMessageDialogueBox\n            initial={{ opacity: 0, translateY: 50 }}\n            animate={{ opacity: 1, translateY: 0 }}\n            exit={{ opacity: 0, translateY: 50 }}\n            style={{\n                backgroundColor: message.isError ? \"rgb(245 179 174)\" : \"rgb(190 247 205)\",\n                border: `solid 2px ${message.isError ? \"#EA4335\" : \"#34A853\"}`\n            }}\n        >\n            {message.msg}        \n        </StyledMessageDialogueBox>\n    );\n}\n\nexport default MessageBox;\n\nlet StyledMessageDialogueBox = styled(motion.div)`\n    width: 320px;\n    margin: 20px auto;\n    display: flex;\n    padding: 5px 10px;\n    color: black;\n    border-radius: 10px;\n    box-sizing: border-box;\n    font-size: 15px;\n    @media only screen and (max-width: 450px) {\n      width: 90%;\n      font-size: 13px;\n    }\n`","import React from 'react';\nimport { motion } from 'framer-motion';\n\nfunction StudentEmailForm({handleUserEmailFormSubmit,setUserEmail}) {\n    return (\n        <motion.form\n            initial={{ opacity: 0, translateY: 100 }}\n            animate={{ opacity: 1, translateY: 0 }}\n            exit={{ opacity: 0, translateX: -1000 }}\n            className=\"student-email-form\" \n            onChange={(e)=>{ setUserEmail(e.target.value) }}\n            onSubmit={handleUserEmailFormSubmit}\n        >\n            <input \n                className=\"student-email-input\"\n                type=\"email\"\n                placeholder=\"Type in your email.\"\n                required\n            />\n            <button\n                onClick={()=>{}}\n                className=\"student-form-submit-button\"\n                type=\"submit\"\n            >Check my progress</button>\n        </motion.form>\n    );\n}\n\nexport default StudentEmailForm;","import { motion } from 'framer-motion';\nimport React from 'react';\n\nfunction Milestone({milestoneData}) {\n    return (\n        <div \n            className=\"progress-item\"\n        >   \n            <p className=\"progress-title\">{`${milestoneData.milestoneTitle} ${milestoneData.hasMilestoneUnlocked ? '✅' : '🔒' }`}</p>\n            <div \n                className=\"progress-bar\"\n                style={{\n                    boxShadow: `0 0 0 2px ${milestoneData.milestoneColor} inset`\n                }}\n            >\n                <motion.p\n                    initial={{ translateX: 400 }}\n                    animate={{ translateX: 0}}\n                    transition={{ delay: 1.8 }}\n                >{milestoneData.hasMilestoneUnlocked ? milestoneData.completedText : ''}</motion.p>\n                <motion.div\n                    initial={{ width: 0 }}\n                    animate={{ width: `${milestoneData.milestoneProgressPercentage}%`}}\n                    transition={{ delay: 1, stiffness: 500 , damping: 300 }}\n                    className=\"progress-width\"\n                    style={{\n                        backgroundColor: `${milestoneData.milestoneColor}`\n                    }}\n                ></motion.div>\n            </div>\n            <div className=\"progress-info-container\">\n                <p className=\"progress-percentage\">{milestoneData.milestoneProgressPercentage}% completed</p>\n                <div className=\"progress-info\">\n                    <p>{milestoneData.milestoneCompletedQuestBadges}/{milestoneData.maxQuestBadges} QB</p>\n                    <p style={{ marginLeft: 5 }}>{milestoneData.milestoneCompletedSkillBadges}/{milestoneData.maxSkillBadges} SB</p>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Milestone;","import React from 'react';\nimport styled from 'styled-components';\n\nfunction StudentInfo({studentData}) {\n    return (\n        <StyledStudentInfo>\n            <div\n                className=\"student-info-card\"\n                style={{ backgroundColor: studentData['Enrolment Status'] === \"All Good\" ? \"#34a853\" : '#EA4335'  }}\n            >\n                <p className=\"student-info-card-title\">Enrolment Status</p>\n                <p className=\"student-info-card-status\">{studentData['Enrolment Status']}</p>\n            </div>\n            <div className=\"student-info-card\">\n                <p className=\"student-info-card-title\"># of Quests Completed</p>\n                <p className=\"student-info-card-number-value\">{studentData['# of Quests Completed']}</p>\n            </div>\n            <div className=\"student-info-card\">\n                <p className=\"student-info-card-title\"># of Skill Badges Completed</p>\n                <p className=\"student-info-card-number-value\">{studentData['# of Skill Badges Completed']}</p>\n            </div>\n            <div className=\"student-info-card\">\n                <p className=\"student-info-card-title\">Enrolment Date & Time</p>\n                <p className=\"student-info-card-value\">{new Date(studentData['Enrolment Date & Time']).toLocaleString(\"en-US\")}</p>\n            </div>\n            <div className=\"student-info-card\">\n                <p className=\"student-info-card-title\">YOUR INSTITUTION</p>\n                <p className=\"student-info-card-value\">{studentData['Institution']}</p>\n            </div>\n        </StyledStudentInfo>\n    );\n}\n\nexport default StudentInfo;\n\nlet StyledStudentInfo = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    width: 95%;\n    margin: 10px auto;\n    .student-info-card{\n        background-color: #4285F4;\n        padding: 5px;\n        border-radius: 10px;\n        padding: 10px;\n        margin: 10px;\n        max-width: 200px;\n        .student-info-card-title{\n            font-style: normal;\n            font-weight: 500;\n            font-size: 12px;\n            line-height: 18px;\n            text-transform: uppercase;\n            color: #FFFFFF;\n            margin: 0;\n            padding: 0;\n        }\n        .student-info-card-value{\n            font-style: normal;\n            font-weight: 600;\n            font-size: 13px;\n            text-transform: capitalize;\n            color: #FFFFFF;\n            margin: 0;\n            padding: 0;\n            margin-top: 10px;\n        }\n        .student-info-card-status{\n            font-style: normal;\n            font-weight: 600;\n            font-size: 15px;\n            text-transform: capitalize;\n            color: #FFFFFF;\n            margin: 0;\n            padding: 0;\n            margin-top: 10px;\n        }\n        .student-info-card-number-value{\n            font-style: normal;\n            font-weight: 800;\n            line-height: 13px;\n            text-transform: capitalize;\n            color: #FFFFFF;\n            font-size: 30px;\n            margin: 20px 0 10px 0;\n            padding: 0;\n        }\n    }\n    \n`","import { motion } from 'framer-motion';\nimport React from 'react';\nimport styled from 'styled-components';\nimport Milestone from './Milestone';\nimport StudentInfo from './StudentInfo';\n\nfunction ProgressCard({ userStudentDetails }) {\n    let completedQuestBadges = parseInt(userStudentDetails[\"# of Quests Completed\"])\n    let completedSkillBadges = parseInt(userStudentDetails[\"# of Skill Badges Completed\"])\n    let clamp = (val, min, max) => {\n        return val > max ? max : val < min ? min : val;\n    }\n    let milestones = [\n        {\n            milestoneTitle: \"Milestone #1 - Complete any 10 quests & 5 skill badges in the program\",\n            milestoneCompletedQuestBadges: completedQuestBadges < 10 ? completedQuestBadges : 10,\n            milestoneCompletedSkillBadges: completedSkillBadges < 5 ? completedSkillBadges : 5,\n            hasMilestoneUnlocked: completedQuestBadges >= 10 && completedSkillBadges >= 5 ? true : false,\n            milestoneProgressPercentage: clamp(((completedQuestBadges / 10) + (completedSkillBadges / 5)) * 50, 0, 100).toFixed(2),\n            maxQuestBadges: 10,\n            maxSkillBadges: 5,\n            milestoneColor: \"#4285F4\",\n            completedText: \"WOHOOO! WAY TO GO BUDDY! 🎉\"\n        },\n        {\n            milestoneTitle: \"Milestone #2 - Complete any 20 quests & 10 skill badges in the program\",\n            milestoneCompletedQuestBadges: completedQuestBadges < 20 ? completedQuestBadges : 20,\n            milestoneCompletedSkillBadges: completedSkillBadges < 10 ? completedSkillBadges : 10,\n            hasMilestoneUnlocked: completedQuestBadges >= 20 && completedSkillBadges >= 10 ? true : false,\n            milestoneProgressPercentage: clamp(((completedQuestBadges / 20) + (completedSkillBadges / 10)) * 50, 0, 100).toFixed(2),\n            maxQuestBadges: 20,\n            maxSkillBadges: 10,\n            milestoneColor: \"#FBBC05\",\n            completedText: \"Keep up the good work! 🔥\"\n        },\n        {\n            milestoneTitle: \"Milestone #3 - Complete any 30 quests & 15 skill badges in the program\",\n            milestoneCompletedQuestBadges: completedQuestBadges < 30 ? completedQuestBadges : 30,\n            milestoneCompletedSkillBadges: completedSkillBadges < 15 ? completedSkillBadges : 15,\n            hasMilestoneUnlocked: completedQuestBadges >= 30 && completedSkillBadges >= 15 ? true : false,\n            milestoneProgressPercentage: clamp(((completedQuestBadges / 30) + (completedSkillBadges / 15)) * 50, 0, 100).toFixed(2),\n            maxQuestBadges: 30,\n            maxSkillBadges: 15,\n            milestoneColor: \"#34A853\",\n            completedText: \"You are awesome! 🤩🔥\"\n\n        },\n        {\n            milestoneTitle: \"Ultimate Milestone: Complete 40 Quests & all 20 Skill Badges\",\n            milestoneCompletedQuestBadges: completedQuestBadges < 40 ? completedQuestBadges : 40,\n            milestoneCompletedSkillBadges: completedSkillBadges < 20 ? completedSkillBadges : 20,\n            hasMilestoneUnlocked: completedQuestBadges >= 40 && completedSkillBadges >= 20 ? true : false,\n            milestoneProgressPercentage: clamp(((completedQuestBadges / 40) + (completedSkillBadges / 20)) * 50, 0, 100).toFixed(2),\n            maxQuestBadges: 40,\n            maxSkillBadges: 20,\n            milestoneColor: \"#EA4335\",\n            completedText: \"Congrats! You totally rock! 💯\"\n\n        }\n    ]\n    return (\n        <StyledProgressCard\n            initial={{ opacity: 0, translateX: 2000 }}\n            animate={{ opacity: 1, translateX: 0 }}\n            exit={{ opacity: 0, translateX: -2000 }}\n            transition={{ delay: 0.5 }}\n        >\n            <h1 className=\"greet-student\">Welcome!! {userStudentDetails['Google Cloud Skills Boost Profile URL']} !</h1>\n            <div className=\"progress-bars-container\">\n                {\n                    milestones.map((milestone, id) => {\n                        return <Milestone\n                            key={id}\n                            milestoneData={milestone}\n                        />\n                    })\n                }\n            </div>\n            <StudentInfo studentData={userStudentDetails} />\n            <p className=\"quest-message\">Quest badges and Skill badges completed since your enrollment date will only be counted for progress. </p>\n        </StyledProgressCard>\n    );\n}\n\nexport default ProgressCard;\n\nlet StyledProgressCard = styled(motion.div)`\n    margin-left: auto;\n    margin-right: auto;\n    background-color: white;\n    border: 2px solid black;\n    box-shadow: 0px 4px 15px -3px rgba(0, 0, 0, 0.29);\n    border-radius: 10px;\n    padding: 10px;\n    .progress-bars-container{\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: center;\n    }\n    .greet-student{\n        font-size: 25px;\n        text-align: center;\n        margin: 0;\n        padding: 0;\n        margin-top: 10px;\n        font-weight: 400;\n        text-transform: capitalize;\n    }\n    .progress-item{\n        display: flex;\n        flex-direction: column;\n        width: 280px;\n        margin: 10px;\n        .progress-title{\n            font-style: normal;\n            font-weight: bold;\n            font-size: 10px;\n            line-height: 15px;\n            text-transform: uppercase;\n            color: #000000;\n        }\n        .progress-bar{\n            position: relative;\n            /* box-shadow: 0px 0px 0px 20px #4285F4 inset; */\n            border-radius: 40px;\n            overflow: hidden;\n            display: flex;\n            align-items: center;\n            padding: 5px 10px;\n            height: 30px;\n            box-sizing: border-box;\n            p{\n                z-index: 1;\n                font-weight: 500;\n                font-size: 12px;\n                line-height: 18px;\n                text-transform: uppercase;\n                color: #FFFFFF;\n                text-shadow: 0px 2px 3px rgba(0, 0, 0, 0.25);\n                margin: 0;\n                padding: 0;\n            }\n            .progress-width{\n                position: absolute;\n                left: 0;\n                top: 0;\n                height: 100%;\n            }\n        }\n        .progress-info-container{\n            margin-top: 5px;\n            display: flex;\n            justify-content: space-between;\n            p{\n                font-style: normal;\n                font-weight: 500;\n                font-size: 12px;\n                line-height: 18px;\n                text-transform: uppercase;\n                color: #000000;\n                margin: 0;\n                padding: 0;\n            }\n            .progress-info{\n                display: flex;\n            }\n        }\n    }\n    .quest-message{\n        font-size: 10px;\n        text-align: center;\n    }\n    @media only screen and (max-width: 450px) {\n        .progress-item{\n            width: 90%;\n        }\n    }\n`\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { AnimatePresence } from 'framer-motion'\nimport MessageBox from './MessageBox';\nimport StudentEmailForm from './StudentEmailForm';\nimport ProgressCard from './ProgressCard.js'\n// import Leaderboard from './Leaderboard';\n\nfunction Dashboard({ studentsData, setIsLoading, showLeaderboard }) {\n    let [userEmail, setUserEmail] = useState(null)\n    let [showProgressCard, setShowProgressCard] = useState(false)\n    let [message, setMessage] = useState(null)\n    let [userStudentDetails, setUserStudentDetails] = useState(null)\n    let handleUserEmailFormSubmit = (e) => {\n        setMessage(false)\n        e.preventDefault()\n        setIsLoading(true)\n        if (studentsData?.data) {\n            let foundStudent = studentsData.data.find(student => {\n                return student[\"Student Email\"] === userEmail\n            })\n            if (foundStudent) {\n                setUserStudentDetails(foundStudent)\n                setIsLoading(false)\n                setShowProgressCard(true)\n            } else {\n                setIsLoading(false)\n                setMessage({\n                    msg: \"No Email address found. Please check your email. Use Email used in enrollment form.\",\n                    isError: true\n                })\n            }\n        } else {\n            setMessage({\n                msg: \"Some Error occured.\",\n                isError: true\n            })\n            setIsLoading(false)\n        }\n        // setShowProgressCard(true)\n    }\n    return (\n        <StyledDash>\n            <AnimatePresence>\n                {\n                    !showProgressCard && !showLeaderboard &&\n                    <StudentEmailForm\n                        handleUserEmailFormSubmit={handleUserEmailFormSubmit}\n                        setUserEmail={setUserEmail}\n                    />\n\n                }\n            </AnimatePresence>\n            <AnimatePresence>\n                {\n                    showProgressCard && !showLeaderboard &&\n                    <ProgressCard userStudentDetails={userStudentDetails} />\n                }\n            </AnimatePresence>\n            {/* <AnimatePresence>\n                {\n                    showLeaderboard &&\n                   // <Leaderboard studentsData={studentsData} />\n}\n            </AnimatePresence> */}\n            <AnimatePresence>\n                {\n                    message && <MessageBox message={message} />\n                }\n            </AnimatePresence>\n        </StyledDash>\n    );\n}\n\nexport default Dashboard;\n\nlet StyledDash = styled.div`\n    display: flex;\n    flex-direction: column;\n    padding: 30px;\n    padding-bottom: 10px;\n    /* margin-top: 20px; */\n    min-width: 400px;\n    max-width: 820px;\n    width: 70vw;\n    margin-left: auto;\n    margin-right: auto;\n    box-sizing: border-box;\n    .student-email-form{\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        margin-top: 0px;\n    }\n    .student-email-input{\n        background: #FFFFFF;\n        box-shadow: 0px 4px 15px -3px rgba(0, 0, 0, 0.29);\n        border-radius: 39px;\n        border: none;\n        font-size: 18px;\n        padding: 10px 20px;\n        outline: none;\n        min-width: 300px;\n        width: 30vw;\n        text-align: center;   \n        transition: all 0.2s ease-in-out;\n        :focus{\n            box-shadow: 0px 4px 20px -3px rgba(255, 0, 0, 0.296);\n        }  \n    }\n    .student-form-submit-button{\n        background: #4285F4;\n        box-shadow: 0px 4px 15px -3px rgba(0, 0, 0, 0.29);\n        border-radius: 39px;\n        border: none;\n        margin-top: 20px;\n        margin-bottom: 20px;\n        font-size: 15px;\n        padding: 8px 15px;\n        font-weight: 500;\n        color: white;\n        outline: none;\n        cursor: pointer;\n        transition: all 0.2s ease-in-out;\n        :hover{\n            box-shadow: 0px 4px 20px -3px rgb(0, 110, 255);\n            transform: scale(0.95)\n        }\n    }\n    @media only screen and (max-width: 700px) {\n        padding: 0px;\n        min-width: unset;\n        width: 90%;\n    }\n    @media only screen and (max-width: 450px) {\n        padding: 0px;\n        min-width: unset;\n        width: 90%;\n        .student-email-input{\n            width: 90%;\n            max-width: unset;\n            min-width: unset;\n        }\n    }\n`","import React from 'react';\nimport styled from 'styled-components'\n\nfunction footer(props) {\n    return (\n        <StyledFooter>\n            <p>Made for 2022 GoogleCloudReady Facilitators & Students with 💖 by <a href=\"https://bio.link/satyamkumarnavneet\">Satyam Kumar Navneet</a> & the GoogleCloudReady Facilitator CU Team!!</p>\n        </StyledFooter>\n    );\n}\n\nexport default footer;\n\nlet StyledFooter = styled.div`\n    display: flex;\n    width: 100%;\n    justify-content: center;\n    margin: 40px auto;\n    padding: 10px; \n    box-sizing: border-box;    \n    p{\n        text-align: center;\n        font-size: 11px;\n        \n    }\n`","import './App.css';\nimport Papa from 'papaparse'\nimport { useEffect, useState } from 'react';\n\nimport Loading from './components/common/Loading'\nimport Header from './components/common/Header'\nimport Dashboard from './components/Dashboard/Dashboard'\nimport Footer from './components/common/Footer'\n\nfunction App() {\n  let [isLoading,setIsLoading] = useState(true)\n  let [studentsData,setStudentsData] = useState([])\n  let [showLeaderboard,setShowLeaderboard] = useState(false)\n  useEffect(()=>{\n    setIsLoading(true)\n    Papa.parse(\"/studentData/data.csv\", {\n      download: true,\n      header: true,\n      complete: function(results) {\n        //Sorting based on the number of quest badges + skill badges  \n        results.data.sort((student1,student2)=>{\n          return (parseInt(student2[\"# of Quests Completed\"]+student2[\"# of Skill Badges Completed\"]))-parseInt((student1[\"# of Quests Completed\"]+student1[\"# of Skill Badges Completed\"]))\n        })\n        setStudentsData(results)\n        setIsLoading(false)\n      }\n    });\n  },[])\n  return (\n    <div className=\"page\">\n      { isLoading && <Loading />}\n      <Header \n        showLeaderboard={showLeaderboard}\n        setShowLeaderboard={setShowLeaderboard}\n      />\n      <Dashboard \n        showLeaderboard={showLeaderboard}\n        studentsData={studentsData}\n        setIsLoading={setIsLoading}\n      />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}